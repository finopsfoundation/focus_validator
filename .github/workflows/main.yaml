name: Validate Focus Data
on:
  push:
    branches:
      - main
      - dev
      - issue/**
jobs:
  validate_focus:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry lock
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry install
      - name: super-step
        shell: sh
        run: |
          poetry run focus-validator --data-file tests/samples/all_pass.csv  --output-type unittest --output-destination reports/focus_tests.xml
      - name: FOCUS Validation Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: FOCUS Validations
          path: reports/*.xml         # Path to test results
          reporter: java-junit        # Format of test results
